#!/usr/bin/env python
"""
_svSuite-list-input-files_

Util for listing files from a Framework Job Report found in the
SVSUITE_INPUT_DIR.

Assumes SVSUITE_INPUT_DIR/FrameworkJobReport.xml exists and reads it

Uses tools from ProdAgent FwkJobRep package

"""

import os
import sys
import getopt


from FwkJobRep.ReportParser import readJobReport




valid = ['job-report=', 'output-module=']




jobReport = "$SVSUITE_INPUT_DIR/FrameworkJobReport.xml"
outputModule = None


usage = \
"""
Usage: svSuite-list-output-files

   Options:
             --output-module=<Name>
             --job-report=<filename>

  Returns a space seperated list of output files found in the the job report.
  The job report is assumed to be $SVSUITE_INPUT_DIR/FrameworkJobReport.xml,
  but can be overridden by the --job-report option.
  To get a list of files written by a single module only, the output module
  name can be provided with the --output-module= option. 


"""
try:
    opts, args = getopt.getopt(sys.argv[1:], "", valid)
except getopt.GetoptError, ex:
    print usage
    print str(ex)
    sys.exit(1)





for opt, arg in opts:
    if opt == "--job-report":
        jobReport = arg
    if opt == "--output-module":
        outputModule = arg


jobReport = os.path.expandvars(jobReport)
if not os.path.exists(jobReport):
    msg = "Cannot find job report file: %s" % jobReport
    raise RuntimeError, msg


results = []

try:
    reports = readJobReport(jobReport)
    for report in reports:
        for ofile in report.files:
            outMod = ofile['ModuleLabel']
            pfn = ofile['PFN']
            if outputModule != None:
                if outMod != outputModule:
                    continue

            results.append(pfn)

except Exception, ex:
    msg = "Unable to extract files from JobReport:\n"
    msg += "%s\n" % jobReport
    msg += str(ex)
    raise RuntimeError, msg


s = ""
for item in results:
    s += " %s" % item

print s
sys.exit(0)

